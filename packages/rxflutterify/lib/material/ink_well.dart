library rxflutterify; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'dart:ui' as ui;

import 'package:flutter/foundation.dart' as _i2;
import 'package:flutter/gestures.dart' as _i4;
import 'package:flutter/material.dart' as _i1;
import 'package:flutter/painting.dart' as _i6;
import 'package:flutter/services.dart' as _i5;
import 'package:flutter/widgets.dart' as _i3;

import '../wrapper.dart';

final class InkResponse extends Wrapper {
  @Goto(_i1.InkResponse.new)
  InkResponse(
    $ $config, {
    _i2.Key? key,
    _i3.Widget? child,
    _i4.GestureTapCallback? onTap,
    _i4.GestureTapDownCallback? onTapDown,
    _i4.GestureTapUpCallback? onTapUp,
    _i4.GestureTapCallback? onTapCancel,
    _i4.GestureTapCallback? onDoubleTap,
    _i4.GestureLongPressCallback? onLongPress,
    _i4.GestureTapCallback? onSecondaryTap,
    _i4.GestureTapUpCallback? onSecondaryTapUp,
    _i4.GestureTapDownCallback? onSecondaryTapDown,
    _i4.GestureTapCallback? onSecondaryTapCancel,
    _i2.ValueChanged<bool>? onHighlightChanged,
    _i2.ValueChanged<bool>? onHover,
    _i5.MouseCursor? mouseCursor,
    bool containedInkWell = false,
    _i6.BoxShape highlightShape = _i6.BoxShape.circle,
    double? radius,
    _i6.BorderRadius? borderRadius,
    _i6.ShapeBorder? customBorder,
    ui.Color? focusColor,
    ui.Color? hoverColor,
    ui.Color? highlightColor,
    _i3.WidgetStateProperty<ui.Color?>? overlayColor,
    ui.Color? splashColor,
    _i1.InteractiveInkFeatureFactory? splashFactory,
    bool enableFeedback = true,
    bool excludeFromSemantics = false,
    _i3.FocusNode? focusNode,
    bool canRequestFocus = true,
    _i2.ValueChanged<bool>? onFocusChange,
    bool autofocus = false,
    _i3.WidgetStatesController? statesController,
    Duration? hoverDuration,
  }) : super(
          Argument({
            #key: key,
            #child: child,
            #onTap: onTap,
            #onTapDown: onTapDown,
            #onTapUp: onTapUp,
            #onTapCancel: onTapCancel,
            #onDoubleTap: onDoubleTap,
            #onLongPress: onLongPress,
            #onSecondaryTap: onSecondaryTap,
            #onSecondaryTapUp: onSecondaryTapUp,
            #onSecondaryTapDown: onSecondaryTapDown,
            #onSecondaryTapCancel: onSecondaryTapCancel,
            #onHighlightChanged: onHighlightChanged,
            #onHover: onHover,
            #mouseCursor: mouseCursor,
            #containedInkWell: containedInkWell,
            #highlightShape: highlightShape,
            #radius: radius,
            #borderRadius: borderRadius,
            #customBorder: customBorder,
            #focusColor: focusColor,
            #hoverColor: hoverColor,
            #highlightColor: highlightColor,
            #overlayColor: overlayColor,
            #splashColor: splashColor,
            #splashFactory: splashFactory,
            #enableFeedback: enableFeedback,
            #excludeFromSemantics: excludeFromSemantics,
            #focusNode: focusNode,
            #canRequestFocus: canRequestFocus,
            #onFocusChange: onFocusChange,
            #autofocus: autofocus,
            #statesController: statesController,
            #hoverDuration: hoverDuration,
          }),
          builder: (args) => _i1.InkResponse(
            key: args(#key),
            child: args(#child),
            onTap: args(#onTap),
            onTapDown: args(#onTapDown),
            onTapUp: args(#onTapUp),
            onTapCancel: args(#onTapCancel),
            onDoubleTap: args(#onDoubleTap),
            onLongPress: args(#onLongPress),
            onSecondaryTap: args(#onSecondaryTap),
            onSecondaryTapUp: args(#onSecondaryTapUp),
            onSecondaryTapDown: args(#onSecondaryTapDown),
            onSecondaryTapCancel: args(#onSecondaryTapCancel),
            onHighlightChanged: args(#onHighlightChanged),
            onHover: args(#onHover),
            mouseCursor: args(#mouseCursor),
            containedInkWell: args(#containedInkWell),
            highlightShape: args(#highlightShape),
            radius: args(#radius),
            borderRadius: args(#borderRadius),
            customBorder: args(#customBorder),
            focusColor: args(#focusColor),
            hoverColor: args(#hoverColor),
            highlightColor: args(#highlightColor),
            overlayColor: args(#overlayColor),
            splashColor: args(#splashColor),
            splashFactory: args(#splashFactory),
            enableFeedback: args(#enableFeedback),
            excludeFromSemantics: args(#excludeFromSemantics),
            focusNode: args(#focusNode),
            canRequestFocus: args(#canRequestFocus),
            onFocusChange: args(#onFocusChange),
            autofocus: args(#autofocus),
            statesController: args(#statesController),
            hoverDuration: args(#hoverDuration),
          ),
        );
}

final class InkWell extends Wrapper {
  @Goto(_i1.InkWell.new)
  InkWell(
    $ $config, {
    _i2.Key? key,
    _i3.Widget? child,
    _i4.GestureTapCallback? onTap,
    _i4.GestureTapCallback? onDoubleTap,
    _i4.GestureLongPressCallback? onLongPress,
    _i4.GestureTapDownCallback? onTapDown,
    _i4.GestureTapUpCallback? onTapUp,
    _i4.GestureTapCallback? onTapCancel,
    _i4.GestureTapCallback? onSecondaryTap,
    _i4.GestureTapUpCallback? onSecondaryTapUp,
    _i4.GestureTapDownCallback? onSecondaryTapDown,
    _i4.GestureTapCallback? onSecondaryTapCancel,
    _i2.ValueChanged<bool>? onHighlightChanged,
    _i2.ValueChanged<bool>? onHover,
    _i5.MouseCursor? mouseCursor,
    ui.Color? focusColor,
    ui.Color? hoverColor,
    ui.Color? highlightColor,
    _i3.WidgetStateProperty<ui.Color?>? overlayColor,
    ui.Color? splashColor,
    _i1.InteractiveInkFeatureFactory? splashFactory,
    double? radius,
    _i6.BorderRadius? borderRadius,
    _i6.ShapeBorder? customBorder,
    bool? enableFeedback = true,
    bool excludeFromSemantics = false,
    _i3.FocusNode? focusNode,
    bool canRequestFocus = true,
    _i2.ValueChanged<bool>? onFocusChange,
    bool autofocus = false,
    _i3.WidgetStatesController? statesController,
    Duration? hoverDuration,
  }) : super(
          Argument({
            #key: key,
            #child: child,
            #onTap: onTap,
            #onDoubleTap: onDoubleTap,
            #onLongPress: onLongPress,
            #onTapDown: onTapDown,
            #onTapUp: onTapUp,
            #onTapCancel: onTapCancel,
            #onSecondaryTap: onSecondaryTap,
            #onSecondaryTapUp: onSecondaryTapUp,
            #onSecondaryTapDown: onSecondaryTapDown,
            #onSecondaryTapCancel: onSecondaryTapCancel,
            #onHighlightChanged: onHighlightChanged,
            #onHover: onHover,
            #mouseCursor: mouseCursor,
            #focusColor: focusColor,
            #hoverColor: hoverColor,
            #highlightColor: highlightColor,
            #overlayColor: overlayColor,
            #splashColor: splashColor,
            #splashFactory: splashFactory,
            #radius: radius,
            #borderRadius: borderRadius,
            #customBorder: customBorder,
            #enableFeedback: enableFeedback,
            #excludeFromSemantics: excludeFromSemantics,
            #focusNode: focusNode,
            #canRequestFocus: canRequestFocus,
            #onFocusChange: onFocusChange,
            #autofocus: autofocus,
            #statesController: statesController,
            #hoverDuration: hoverDuration,
          }),
          builder: (args) => _i1.InkWell(
            key: args(#key),
            child: args(#child),
            onTap: args(#onTap),
            onDoubleTap: args(#onDoubleTap),
            onLongPress: args(#onLongPress),
            onTapDown: args(#onTapDown),
            onTapUp: args(#onTapUp),
            onTapCancel: args(#onTapCancel),
            onSecondaryTap: args(#onSecondaryTap),
            onSecondaryTapUp: args(#onSecondaryTapUp),
            onSecondaryTapDown: args(#onSecondaryTapDown),
            onSecondaryTapCancel: args(#onSecondaryTapCancel),
            onHighlightChanged: args(#onHighlightChanged),
            onHover: args(#onHover),
            mouseCursor: args(#mouseCursor),
            focusColor: args(#focusColor),
            hoverColor: args(#hoverColor),
            highlightColor: args(#highlightColor),
            overlayColor: args(#overlayColor),
            splashColor: args(#splashColor),
            splashFactory: args(#splashFactory),
            radius: args(#radius),
            borderRadius: args(#borderRadius),
            customBorder: args(#customBorder),
            enableFeedback: args(#enableFeedback),
            excludeFromSemantics: args(#excludeFromSemantics),
            focusNode: args(#focusNode),
            canRequestFocus: args(#canRequestFocus),
            onFocusChange: args(#onFocusChange),
            autofocus: args(#autofocus),
            statesController: args(#statesController),
            hoverDuration: args(#hoverDuration),
          ),
        );
}
